{"ast":null,"code":"// upload images\nexport const uploadImage = async file => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  formData.append(\"upload_preset\", \"lux_n_stay\");\n  //const cloudName = process.env.REACT_APP_CLOUD_NAME;\n  formData.append(\"cloud_name\", \"dxx54wokj\");\n  const url = `http://api.cloudinary.com/v1_1/dxx54wokj/image/upload`;\n  const response = await fetch(url, {\n    method: \"POST\",\n    body: formData\n  });\n  if (!response.ok) {\n    throw new Error(\"something went wrong\");\n  }\n  const data = await response.json();\n  return data.secure_url;\n};","map":{"version":3,"names":["uploadImage","file","formData","FormData","append","url","response","fetch","method","body","ok","Error","data","json","secure_url"],"sources":["/Users/ilyes/Downloads/Téléchargement 2021-2024/Lux_n_Stay bis/admin/src/helper/utils.js"],"sourcesContent":["// upload images\nexport const uploadImage = async (file) => {\n\n\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  formData.append(\"upload_preset\", \"lux_n_stay\");\n  //const cloudName = process.env.REACT_APP_CLOUD_NAME;\n  formData.append(\"cloud_name\", \"dxx54wokj\")\n  const url = `http://api.cloudinary.com/v1_1/dxx54wokj/image/upload`;\n\n  const response = await fetch(url, {\n    method: \"POST\",\n    body: formData,\n  });\n\n  if (!response.ok) {\n    throw new Error(\"something went wrong\");\n  }\n\n  const data = await response.json();\n  return data.secure_url;\n};\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,WAAW,GAAG,MAAOC,IAAI,IAAK;EAGzC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EAC7BC,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAE,YAAY,CAAC;EAC9C;EACAF,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE,WAAW,CAAC;EAC1C,MAAMC,GAAG,GAAG,uDAAuD;EAEnE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;IAChCG,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEP;EACR,CAAC,CAAC;EAEF,IAAI,CAACI,QAAQ,CAACI,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EACzC;EAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI,CAACE,UAAU;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}