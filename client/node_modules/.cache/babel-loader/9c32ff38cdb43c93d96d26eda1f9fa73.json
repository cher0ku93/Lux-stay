{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  rooms: [],\n  isLoading: false,\n  isSuccess: false,\n  isError: false,\n  message: \"\"\n};\n\n// create room\nexport const createRoom = createAsyncThunk(\"room/create\", async (roomData, thunkApi) => {\n  try {\n    const res = await fetch(\"/api/rooms\", {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      method: \"POST\",\n      body: JSON.stringify(roomData)\n    });\n    if (!res.ok) {\n      const error = await res.json();\n      return thunkApi.rejectWithValue(error);\n    }\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.log(error.message);\n    return thunkApi.rejectWithValue(error.message);\n  }\n});\n\n// get all rooms\nexport const getRooms = createAsyncThunk(\"room/getall\", async (_, thunkApi) => {\n  try {\n    const res = await fetch(\"/api/rooms\");\n    if (!res.ok) {\n      const error = await res.json();\n      return thunkApi.rejectWithValue(error);\n    }\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.log(error.message);\n    return thunkApi.rejectWithValue(error.message);\n  }\n});\n\n// update room\nexport const updateRoom = createAsyncThunk(\"/room/update\", async (roomData, thunkApi) => {\n  try {\n    const {\n      roomId,\n      ...rest\n    } = roomData;\n    const res = await fetch(`/api/rooms/${roomId}`, {\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      method: \"PUT\",\n      body: JSON.stringify(rest)\n    });\n    const data = await res.json();\n    if (!res.ok) {\n      return thunkApi.rejectWithValue(data);\n    }\n    return data;\n  } catch (error) {\n    console.log(error.message);\n    return thunkApi.rejectWithValue(error.message);\n  }\n});\nexport const deleteRoom = createAsyncThunk(\"room/delete\", async (roomId, thunkApi) => {\n  try {\n    const res = await fetch(`/api/rooms/${roomId}`, {\n      method: \"DELETE\"\n    });\n    const data = await res.json();\n    if (!res.ok) {\n      return thunkApi.rejectWithValue(data);\n    }\n    return data;\n  } catch (error) {\n    return thunkApi.rejectWithValue(error.message);\n  }\n});\nexport const roomSlice = createSlice({\n  name: \"room\",\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = false;\n      state.message = \"\";\n    }\n  },\n  extraReducers: builder => {\n    // add cases here\n    builder.addCase(createRoom.pending, state => {\n      state.isLoading = true;\n    }).addCase(createRoom.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.rooms = action.payload;\n    }).addCase(createRoom.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(getRooms.pending, state => {\n      state.isLoading = true;\n    }).addCase(getRooms.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.rooms = action.payload;\n    }).addCase(getRooms.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(updateRoom.pending, state => {\n      state.isLoading = true;\n    }).addCase(updateRoom.fulfilled, (state, action) => {\n      state.isSuccess = true;\n      state.isLoading = false;\n      state.rooms = action.payload;\n    }).addCase(updateRoom.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    }).addCase(deleteRoom.pending, state => {\n      state.isLoading = true;\n    }).addCase(deleteRoom.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.rooms = state.rooms.filter(room => room._id != action.payload.id);\n    }).addCase(deleteRoom.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  reset\n} = roomSlice.actions;\nexport default roomSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","rooms","isLoading","isSuccess","isError","message","createRoom","roomData","thunkApi","res","fetch","headers","method","body","JSON","stringify","ok","error","json","rejectWithValue","data","console","log","getRooms","_","updateRoom","roomId","rest","deleteRoom","roomSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","filter","room","_id","id","actions","reducer"],"sources":["/Users/ilyes/Downloads/Téléchargement 2021-2024/Lux_n_Stay bis/client/src/features/room/roomSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  rooms: [],\n  isLoading: false,\n  isSuccess: false,\n  isError: false,\n  message: \"\",\n};\n\n// create room\nexport const createRoom = createAsyncThunk(\n  \"room/create\",\n  async (roomData, thunkApi) => {\n    try {\n      const res = await fetch(\"/api/rooms\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        method: \"POST\",\n        body: JSON.stringify(roomData),\n      });\n\n      if (!res.ok) {\n        const error = await res.json();\n        return thunkApi.rejectWithValue(error);\n      }\n\n      const data = await res.json();\n      return data;\n    } catch (error) {\n      console.log(error.message);\n      return thunkApi.rejectWithValue(error.message);\n    }\n  }\n);\n\n// get all rooms\nexport const getRooms = createAsyncThunk(\"room/getall\", async (_, thunkApi) => {\n  try {\n    const res = await fetch(\"/api/rooms\");\n    if (!res.ok) {\n      const error = await res.json();\n      return thunkApi.rejectWithValue(error);\n    }\n\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.log(error.message);\n    return thunkApi.rejectWithValue(error.message);\n  }\n});\n\n// update room\nexport const updateRoom = createAsyncThunk(\n  \"/room/update\",\n  async (roomData, thunkApi) => {\n    try {\n      const { roomId, ...rest } = roomData;\n      const res = await fetch(`/api/rooms/${roomId}`, {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        method: \"PUT\",\n        body: JSON.stringify(rest),\n      });\n      const data = await res.json();\n      if (!res.ok) {\n        return thunkApi.rejectWithValue(data);\n      }\n\n      return data;\n    } catch (error) {\n      console.log(error.message);\n      return thunkApi.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const deleteRoom = createAsyncThunk(\n  \"room/delete\",\n  async (roomId, thunkApi) => {\n    try {\n      const res = await fetch(`/api/rooms/${roomId}`, {\n        method: \"DELETE\",\n      });\n      const data = await res.json();\n      if (!res.ok) {\n        return thunkApi.rejectWithValue(data);\n      }\n      return data;\n    } catch (error) {\n      return thunkApi.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const roomSlice = createSlice({\n  name: \"room\",\n  initialState,\n  reducers: {\n    reset: (state) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = false;\n      state.message = \"\";\n    },\n  },\n  extraReducers: (builder) => {\n    // add cases here\n    builder\n      .addCase(createRoom.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(createRoom.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isSuccess = true;\n        state.rooms = action.payload;\n      })\n      .addCase(createRoom.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isError = true;\n        state.message = action.payload;\n      })\n      .addCase(getRooms.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(getRooms.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isSuccess = true;\n        state.rooms = action.payload;\n      })\n      .addCase(getRooms.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isError = true;\n        state.message = action.payload;\n      })\n      .addCase(updateRoom.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(updateRoom.fulfilled, (state, action) => {\n        state.isSuccess = true;\n        state.isLoading = false;\n        state.rooms = action.payload;\n      })\n      .addCase(updateRoom.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isError = true;\n        state.message = action.payload;\n      })\n      .addCase(deleteRoom.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(deleteRoom.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isSuccess = true;\n        state.rooms = state.rooms.filter(\n          (room) => room._id != action.payload.id\n        );\n      })\n      .addCase(deleteRoom.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isError = true;\n        state.message = action.payload;\n      });\n  },\n});\n\nexport const { reset } = roomSlice.actions;\nexport default roomSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}